(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{145:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},s=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(n),u=r,m=s["".concat(c,".").concat(u)]||s[u]||d[u]||i;return n?a.a.createElement(m,o({ref:t},p,{components:n})):a.a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var p=2;p<i;p++)c[p]=n[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(1),a=n(6),i=(n(0),n(145)),c={id:"integration-blockchain",title:"Blockchain",sidebar_label:"Blockchain"},o={id:"integration-blockchain",title:"Blockchain",description:"The blockchain endpoints exposes blockchain functionality to verify payment and approve Bridge Verified Claim publish transactions (Bridge only)\r",source:"@site/..\\docs\\integration-blockchain.md",permalink:"/docs/integration-blockchain",sidebar_label:"Blockchain",sidebar:"gettingStarted",previous:{title:"Passport",permalink:"/docs/integration-passport"},next:{title:"Claim and Profile Type",permalink:"/docs/integration-index"}},l=[{value:"POST /blockchain/verifypayment",id:"post-blockchainverifypayment",children:[]},{value:"POST /blockchain/createclaimpublish",id:"post-blockchaincreateclaimpublish",children:[]},{value:"POST /blockchain/approveclaimpublish",id:"post-blockchainapproveclaimpublish",children:[]}],p={rightToc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The blockchain endpoints exposes blockchain functionality to verify payment and approve Bridge Verified Claim publish transactions (Bridge only)"),Object(i.b)("h3",{id:"post-blockchainverifypayment"},"POST /blockchain/verifypayment"),Object(i.b)("p",null,"Verify a payment transaction on the blockcahin"),Object(i.b)("h5",{id:"example-request"},"Example Request:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'{\n    "network":"NEO",\n    "txid":"12345",\n    "from":"AXbopuA5SPv5EVQP5REer4kdwMXpjRC7YQ",\n    "to":"AXbopuA5SPv5EVQP5REer4kdwMXpjRC7YQ",\n    "amount":1,\n    "identifier":"12345"\n}\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"network")," (string) - the blockchain network of the payment"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"txid")," (string) - the blockchain unique transaction id"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"from")," (string) - the blockchain address the payment was sent from"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"to")," (string) - the blockchain address the payment was sent to"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"amount")," (int) - the payment amount"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"identifier")," (string) - the unique identifier of the transaction")),Object(i.b)("h5",{id:"example-response"},"Example Response:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'{\n    "complete":false,\n    "success":false\n}\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"complete")," (bool) - whether or not the transaction is finalized on the blockchain"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"success")," (bool) - whether or not the transaction was completed and all provided information was verified")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"post-blockchaincreateclaimpublish"},"POST /blockchain/createclaimpublish"),Object(i.b)("p",null,"Create a dual-sign transaction to allow publish a claim in the Bridge Keyserver Contract on NEO.  "),Object(i.b)("h5",{id:"example-request-1"},"Example Request:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'{\n    "network":"NEO",\n    "passportId":"fc5fe52784bf7149648d87aa9f17aabff1c68a64",\n    "address":"AXbopuA5SPv5EVQP5REer4kdwMXpjRC7YQ",\n    "claim":{\n        "claimTypeId":3,\n        "claimValue":"someuser@bridgeprotocol.io",\n        "createdOn":1551180491,\n        "expiresOn\\:0,\n        "signedByKey":"2d2d2d2d2d424547494e20504750205055424...","signature":"2d2d2d2d2d424547494e20504750204d4553534..."\n    }\n}\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"NOTE: Only Bridge admin blockchain addresses can sign this transaction or the smart contract execution will fail")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"post-blockchainapproveclaimpublish"},"POST /blockchain/approveclaimpublish"),Object(i.b)("p",null,"Approve the publishing of a claim in the Bridge Keyserver Contract on Ethereum. "),Object(i.b)("h5",{id:"example-request-2"},"Example Request:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'{\n    "network":"ETH",\n    "passportId":"fc5fe52784bf7149648d87aa9f17aabff1c68a64",\n    "address":"0x5D78C013E5D3fe491f1D26650F4Eb9cb650d3c0F",\n    "claim":{\n        "claimTypeId":3,\n        "claimValue":"someuser@bridgeprotocol.io",\n        "createdOn":1551180491,\n        "expiresOn\\:0,\n        "signedByKey":"2d2d2d2d2d424547494e20504750205055424...","signature":"2d2d2d2d2d424547494e20504750204d4553534..."\n    }\n}\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"NOTE: Only Bridge admin blockchain addresses can sign this transaction or the smart contract execution will fail")))}b.isMDXComponent=!0}}]);