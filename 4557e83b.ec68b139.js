(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{112:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return p})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return l}));var r=a(1),n=a(6),i=(a(0),a(145)),p={id:"sdk-services-application",title:"Application",sidebar_label:"Application"},s={id:"sdk-services-application",title:"Application",description:"Service to manage the lifecycle of verification requests on the Bridge Network\r",source:"@site/..\\docs\\sdk-services-application.md",permalink:"/docs/sdk-services-application",sidebar_label:"Application",sidebar:"gettingStarted",previous:{title:"Payment",permalink:"/docs/sdk-messaging-payment"},next:{title:"Blockchain",permalink:"/docs/sdk-services-blockchain"}},o=[{value:"Functions",id:"functions",children:[{value:"createApplication()",id:"createapplication",children:[]},{value:"getActiveApplications()",id:"getactiveapplications",children:[]},{value:"getAllApplications()",id:"getallapplications",children:[]},{value:"getApplication()",id:"getapplication",children:[]},{value:"getStatus()",id:"getstatus",children:[]},{value:"updatePaymentTransaction()",id:"updatepaymenttransaction",children:[]},{value:"retrySend()",id:"retrysend",children:[]}]}],c={rightToc:o};function l(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Service to manage the lifecycle of verification requests on the Bridge Network"),Object(i.b)("h2",{id:"functions"},"Functions"),Object(i.b)("h3",{id:"createapplication"},"createApplication()"),Object(i.b)("p",null,"Create a new verification request for the passport with a specified partner"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"async createApplication(passport, passphrase, partner)\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passport")," (",Object(i.b)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"partner")," (string) - the passport id of the target partner")),Object(i.b)("h3",{id:"getactiveapplications"},"getActiveApplications()"),Object(i.b)("p",null,"Retrieve all verification requests for the passport with an active status"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"async getActiveApplications(passport, passphrase)\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passport")," (",Object(i.b)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key")),Object(i.b)("h3",{id:"getallapplications"},"getAllApplications()"),Object(i.b)("p",null,"Retrieve all verification requests for the passport"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"async getAllApplications(passport, passphrase)\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passport")," (",Object(i.b)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key")),Object(i.b)("h3",{id:"getapplication"},"getApplication()"),Object(i.b)("p",null,"Retrieve the full details of a specific verification request"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"async getApplication(passport, passphrase, applicationId)\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passport")," (",Object(i.b)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"applicationId")," (string) - unique identifier of the verification request")),Object(i.b)("h3",{id:"getstatus"},"getStatus()"),Object(i.b)("p",null,"Retrieves the status of a verification request"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"async getStatus(passport, passphrase, applicationId)\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passport")," (",Object(i.b)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication, only required if useApi=true"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key, only required if useApi=true"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"applicationId")," - the unique identifier of the verification request")),Object(i.b)("h3",{id:"updatepaymenttransaction"},"updatePaymentTransaction()"),Object(i.b)("p",null,"Updates an existing verification request with payment transaction information for network fee payment"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"async updatePaymentTransaction(passport, passphrase, applicationId, network, transactionId)\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passport")," (",Object(i.b)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"applicationId")," (string) - the unique identifier of the verification request"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"network")," (string) - the network payment was sent on"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"transactionId")," (string) - the blockchain transaction id of the payment")),Object(i.b)("h3",{id:"retrysend"},"retrySend()"),Object(i.b)("p",null,"Attempt to (re)send the verification request to the verifiation partner on the Bridge Network.  If a prior attempt has failed, this is used to re-attempt transmission."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"async retrySend(passport, passphrase, applicationId)\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passport")," (",Object(i.b)("a",{href:"sdk-models-passport"},"Passport"),") - passport context used for API authentication"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"passphrase")," (string) - password used to unlock context passport private key"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"applicationId")," - the unique identifier of the verification request")))}l.isMDXComponent=!0},145:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return O}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=n.a.createContext({}),l=function(e){var t=n.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s({},t,{},e)),a},b=function(e){var t=l(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),b=l(a),d=r,O=b["".concat(p,".").concat(d)]||b[d]||u[d]||i;return a?n.a.createElement(O,s({ref:t},c,{components:a})):n.a.createElement(O,s({ref:t},c))}));function O(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,p=new Array(i);p[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,p[1]=s;for(var c=2;c<i;c++)p[c]=a[c];return n.a.createElement.apply(null,p)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);