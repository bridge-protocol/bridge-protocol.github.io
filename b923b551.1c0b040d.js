(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{131:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return f}));var r=t(1),i=t(6),o=(t(0),t(145)),a={id:"integration-index",title:"Claim and Profile Type",sidebar_label:"Claim and Profile Type"},c={id:"integration-index",title:"Claim and Profile Type",description:"The Claim and Profile endpoints allow for retrieval of Bridge known type definitions.\r",source:"@site/..\\docs\\integration-index.md",permalink:"/docs/integration-index",sidebar_label:"Claim and Profile Type",sidebar:"gettingStarted",previous:{title:"Blockchain",permalink:"/docs/integration-blockchain"}},l=[{value:"GET /claim/types",id:"get-claimtypes",children:[]},{value:"GET /profile/types",id:"get-profiletypes",children:[]}],p={rightToc:l};function f(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The Claim and Profile endpoints allow for retrieval of Bridge known type definitions."),Object(o.b)("h3",{id:"get-claimtypes"},"GET /claim/types"),Object(o.b)("p",null,"Retrieves the type definitions for all known Claim types on the Bridge Network"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'[\n    {\n        "id":1,\n        "name":"First Name",\n        "description":"Owner first name",\n        "dataType":"string",\n        "scope":"private",\n        "defaultExpirationDays":0\n    }\n]\n')),Object(o.b)("hr",null),Object(o.b)("h3",{id:"get-profiletypes"},"GET /profile/types"),Object(o.b)("p",null,"Retrieves the type definitions for all known Profile types on the Bridge Network"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'[\n    {\n        "id":1,\n        "name":"Age Verification Over 18",\n        "description":"Age Verification Profile for 18+",\n        "claimTypes":[100001]\n    }\n]\n')))}f.isMDXComponent=!0},145:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=i.a.createContext({}),f=function(e){var n=i.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},u=function(e){var n=f(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},s=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=f(t),s=r,b=u["".concat(a,".").concat(s)]||u[s]||d[s]||o;return t?i.a.createElement(b,c({ref:n},p,{components:t})):i.a.createElement(b,c({ref:n},p))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=s;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<o;p++)a[p]=t[p];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);