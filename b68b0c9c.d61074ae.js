(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{120:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(1),a=r(6),o=(r(0),r(133)),s={id:"messaging-auth",title:"Bridge Protocol Authentication Protocol",sidebar_label:"Authentication Protocol"},i={id:"messaging-auth",title:"Bridge Protocol Authentication Protocol",description:"# Bridge Protcol Authentication Protocol\r",source:"@site/..\\docs\\messaging-auth.md",permalink:"/docs/messaging-auth",sidebar_label:"Authentication Protocol",sidebar:"someSidebar",previous:{title:"Messaging",permalink:"/docs/messaging"},next:{title:"Bridge Protocol Claims Import Protocol",permalink:"/docs/messaging-claimsimport"}},c=[{value:"Creating a Passport Challenge Request",id:"creating-a-passport-challenge-request",children:[]},{value:"Receiving the Passport Challenge Request",id:"receiving-the-passport-challenge-request",children:[]},{value:"Sending the Passport Challenge Response",id:"sending-the-passport-challenge-response",children:[]},{value:"Receiving the Passport Challenge Response",id:"receiving-the-passport-challenge-response",children:[]}],l={rightToc:c};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"bridge-protcol-authentication-protocol"},"Bridge Protcol Authentication Protocol"),Object(o.b)("img",{src:"https://github.com/bridge-protocol/bridge-protocol-js/blob/ethereum-publishing/docs/images/message-authchallenge.jpg?raw=true"}),Object(o.b)("h2",{id:"creating-a-passport-challenge-request"},"Creating a Passport Challenge Request"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),'let randomAuthToken = "randomtoken";\nlet requiredClaimTypes = [3];\nlet requiredBlockchainAddresses = ["neo","eth"];\n\nlet authRequest = await _bridge.Messaging.Auth.createPassportChallengeRequest(passport, password, randomAuthToken, requiredClaimTypes, requiredBlockchainAddresses);\n')),Object(o.b)("h2",{id:"receiving-the-passport-challenge-request"},"Receiving the Passport Challenge Request"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"let authMessage = await _bridge.Messaging.Auth.verifyPassportChallengeRequest(authRequest);\n")),Object(o.b)("h2",{id:"sending-the-passport-challenge-response"},"Sending the Passport Challenge Response"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"let claims = await passport.getDecryptedClaims(authMessage.payload.claimTypes, password);\nlet addresses = passport.getWalletAddresses(authMessage.payload.networks);\n\nlet authResponse = await _bridge.Messaging.Auth.createPassportChallengeResponse(passport, password, authMessage.publicKey, authMessage.payload.token, claims, addresses); \n")),Object(o.b)("h2",{id:"receiving-the-passport-challenge-response"},"Receiving the Passport Challenge Response"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"var authValidationInfo =  await _bridge.Messaging.Auth.verifyPassportChallengeResponse(_networkPartnerPassport, password, authResponse, randomAuthToken, requiredClaimTypes, requiredBlockchainAddresses);\n")))}p.isMDXComponent=!0},133:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return h}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i({},t,{},e)),r},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,h=u["".concat(s,".").concat(d)]||u[d]||g[d]||o;return r?a.a.createElement(h,i({ref:t},l,{components:r})):a.a.createElement(h,i({ref:t},l))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);